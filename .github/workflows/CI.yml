name: Pipeline Continous Integration for a sÃ®mple nodejs 

on:
  push:
    branches: [ "master" ]

jobs:

  build-image:
    runs-on: ubuntu-latest
    environment: "CICD"

    steps:

    - name: Sparse checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          Dockerfile
          .dockerignore
    - name: ls 
      run: |
          env && pwd && ls -altr
    #- name: login dockerhub action 
    #  uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
    #  #username: ${{ secrets.DOCKERHUB_USERNAME }}
    #  #password: ${{ secrets.DOCKERHUB_PASSWORD }}
    #  with:
    #    username: ${{ secrets.DOCKERHUB_USERNAME }}
    #    password: ${{ secrets.DOCKERHUB_PASSWORD }}

    #- name: Login Registry Dockerhub
    #  env:
    #    DOCKER_USERNAME: ${{ secrets.DOCKER_USER }}
    #    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS }}
    #  run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    #  run:  echo "$DOCKER_PASSWORD" | docker login --username=$DOCKER_USERNAME --password-stdin
    #  #run: docker login -u $DOCKER_USER -p $DOCKER_PASS

    #- name: Build  Image
    #  run: docker build  -t fabstock2/nodeapp:0.0.1-manu .

    #- name: Tag Image
    #  run: docker tag fabstock2/nodeapp:0.0.1-manu fabstock2/nodeapp:latest


    #- name: Push Hub Docker
    #  run: docker push fabstock2/nodeapp:0.0.1-manu:latest
    - name: login docker hub registry
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}


    


  build-test:
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: fabstock2/source-app:0.0.1-lamanu
      env:
        NODE_ENV: test
      ports:
        - 3000
    
    environment: "CICD"
    steps:
    
    - name : checkout repo
      uses: actions/checkout@v3

    - name: affiche variables 
      run: |
        echo GITHUB_WORKSPACE: $GITHUB_WORKSPACE GITHUB_ACTION_REPOSITORY: $GITHUB_ACTION_REPOSITORY GIT_DIR: $GIT_DIR  GIT_WORK_TREE: $GIT_WORK_TREE \
             GITHUB_PATH: $GITHUB_PATH


    
    - name: Install dependencies
      run: npm install
      #working-directory: /__w/distroless-lamanu/distroless-lamanu/source-app/
      working-directory: source-app/
 
    - name: install jest & eslint 
      run: npm install jest eslint
      #working-directory: /__w/distroless-lamanu/distroless-lamanu/source-app/
      working-directory: source-app/

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: sh
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
   



 
    - name: cache node_module
      id: npm-cache
      uses: actions/cache@v4
      with:
        #path: '/__w/distroless-lamanu/distroless-lamanu/source-app/node_modules'
        #key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-



    - name: affiche variable
      run: env 



    - name: tests running 
      run: npm run test
      #working-directory: /__w/distroless-lamanu/distroless-lamanu/source-app/
      working-directory: source-app/

    - name: run lint 
      run: npm run lint
      #working-directory: /__w/distroless-lamanu/distroless-lamanu/source-app/
      working-directory: source-app/

 
    - name: Discord Notification on Success
      if: ${{ success() }}
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'Tests and lint  for  project {{ EVENT_PAYLOAD.repository.full_name }} (lint, tests) passed the lint and tests.'

    - name: Discord Notification on Failure
      if: ${{ failure() }}
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'Tests and lint for  project {{ EVENT_PAYLOAD.repository.full_name }} has failed.'
 
  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    container:
      image: fabstock2/source-app:0.0.1-lamanu
      env:
        NODE_ENV: production
      ports:
        - 3000
    steps:

      - name: echo env
        run: env && pwd && ls -altr && echo id:$(id)
 
      - name: run pipe
        run: |
          echo "checkout repo"
          echo ${PWD} 
      - name: checkout repo
        uses: actions/checkout@v3
        #with:
        #  path: "__w/distroless-lamanu/distroless-lamanu/source-app/"

      - name: npm install
        working-directory: /source-app/
        #working-directory: /__w/distroless-lamanu/distroless-lamanu/source-app/
        run: npm instal

      - name: npm start 
        working-directory: /source-app/
        #working-directory: /__w/distroless-lamanu/distroless-lamanu/source-app/
        run: |
          env && pwd && ls -altr
          
          npm start &
      - name: curl 
        run: |
          curl http://localhost:3000/ 
